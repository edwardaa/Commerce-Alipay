<?php

/**
 * @file
 * Implements Alipay Mobile Payment in Drupal Commerce checkout.
 */

/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_alipay_mobile_commerce_payment_method_info() {
  $payment_methods['alipay_mobile'] = array(
    'base' => 'commerce_alipay_mobile',
    'title' => t('Alipay Mobile'),
    'short_title' => t('Alipay Mobile'),
    'description' => t('Alipay Mobile Payment'),
    'terminal' => FALSE,
    'checkout' => FALSE,
  );

  return $payment_methods;
}

/**
 * Returns the default settings for the Alipay Mobile payment method.
 */
function commerce_alipay_mobile_default_settings() {
  return array(
    'partner' => '',
    'rsa_private' => '',
    'rsa_public' => '',
    'sign_type' => 'RSA',
    'ipn_logging' => 'notification',
    'double_quotes' => TRUE,
    'fixed_fee' => FALSE,
  );
}

/**
 * Payment method callback: settings form.
 */
function commerce_alipay_mobile_settings_form($settings = array()) {
  $settings = $settings + commerce_alipay_mobile_default_settings();

  $form['partner'] = array(
    '#type' => 'textfield',
    '#title' => t('Alipay partner ID'),
    '#description' => t('The number starting with 2088'),
    '#default_value' => $settings['partner'],
    '#required' => TRUE,
  );
  // Currently only RSA sign type is supported
  $form['sign_type'] = array(
    '#type' => 'radios',
    '#title' => t('Sign type'),
    '#options' => array(
      'RSA' => 'RSA',
    ),
    '#description' => t('Currently only RSA sign type is supported.'),
    '#default_value' => $settings['sign_type'],
    '#required' => TRUE,
  );
  $form['rsa_private'] = array(
    '#type' => 'textfield',
    '#title' => t('Merchant RSA private key'),
    '#description' => t('Merchant RSA private pem file path'),
    '#default_value' => $settings['rsa_private'],
    '#element_validate' => array('commerce_alipay_mobile_rsa_key_exist'),
    '#required' => TRUE,
    '#states' => array(
      'visible' => array(
        ':input[name="parameter[payment_method][settings][payment_method][settings][sign_type]"]' => array('value' => 'RSA'),
      ),
    ),
  );
  $form['rsa_public'] = array(
    '#type' => 'textfield',
    '#title' => t('Alipay RSA public key'),
    '#description' => t('Alipay RSA public pem file path'),
    '#default_value' => $settings['rsa_public'],
    '#element_validate' => array('commerce_alipay_mobile_rsa_key_exist'),
    '#required' => TRUE,
    '#states' => array(
      'visible' => array(
        ':input[name="parameter[payment_method][settings][payment_method][settings][sign_type]"]' => array('value' => 'RSA'),
      ),
    ),
  );
  $form['ipn_logging'] = array(
    '#type' => 'radios',
    '#title' => t('IPN logging'),
    '#options' => array(
      'notification' => t('Log notifications during IPN validation and processing.'),
      'full_ipn' => t('Log notifications with the full IPN during validation and processing (used for debugging).'),
    ),
    '#default_value' => $settings['ipn_logging'],
  );
  $form['double_quotes'] = array(
    '#type' => 'hidden',
    '#title' => t('Surround data value with double quotes.'),
    '#description' => t('For example, partner="2088012345678901"&sign_type="RSA".'),
    '#default_value' => $settings['double_quotes'],
  );
  $form['fixed_fee'] = array(
    '#type' => 'checkbox',
    '#title' => t('Set total fee to 0.01 CNY.'),
    '#description' => t('<strong class="warning">Warning:</strong> This option is only for development purpose, and should <b>never</b> be enabled on a production site.'),
    '#default_value' => $settings['fixed_fee'],
  );

  return $form;
}

/**
 * Form elements validate callback
 */
function commerce_alipay_mobile_rsa_key_exist($element, &$form_state, $form) {
  if (!file_exists($element['#value'])) {
    form_error($element, t('RSA key file not found at specified path.'));
  }
}

/**
 * Returns a signed array of request parameters for a given order.
 *
 * @return
 *   A signed array or FALSE if the payment method haven't been configured
 */
function commerce_alipay_mobile_signed_data($order, $payment_method) {
  // Return an error if the enabling action's settings haven't been configured.
  if (empty($payment_method['settings']['partner'])) {
    // Alipay Mobile is not configured for use. No Alipay partner has been specified.
    return FALSE;
  }

  $settings = array(
    // Specify the current payment method instance ID in the notify_url
    'payment_method' => $payment_method['instance_id'],
  );

  return commerce_alipay_mobile_order_data($order, $payment_method['settings'] + $settings);
}

/** Builds a Direct Payment form from an order object.
 *
 * @param $order
 *   The fully loaded order being paid for.
 *
 * @return
 *   The signed data.
 */
function commerce_alipay_mobile_order_data($order, $settings) {
  $data = array(
    'service' => ALIPAY_SERVICE_MOBILE,
    'partner' => $settings['partner'],
    'seller_id' => $settings['partner'],
    'payment_type' => '1',
    'notify_url' => commerce_alipay_ipn_url($settings['payment_method']),
    'out_trade_no' => commerce_alipay_out_trade_number($order),
    'total_fee' => commerce_alipay_order_total_fee($order),
    // TODO: remove all reserved keywords like &seller_id, $out_trade_no, etc.
    'subject' => _commerce_alipay_mobile_order_subject($order), // TODO: subject
    'body' => _commerce_alipay_mobile_order_body($order), // TODO: body
    '_input_charset' => ALIPAY_CHARSET,
    'it_b_pay' => '15m', // TODO: timeout for stock. does not work for android client?
    // 'paymethod'=> 'expressGateway', // TODO:
  );

  drupal_alter('commerce_alipay_mobile_order_data', $data, $order);

  // In debug mode.
  if ($settings['fixed_fee']) {
    $data['total_fee'] = 0.01;
  }

  // Sign request data.
  return commerce_alipay_sign($data, $settings);
}

function _commerce_alipay_mobile_order_subject($order) {
  $subject = ';resultStatus={%26支/付subject&seller_id=2088123213';
  _commerce_alipay_mobile_filter_special_characters($subject);
  return urlencode($subject);
}

function _commerce_alipay_mobile_order_body($order) {
  $subject = '"#out_trade_no=123 &total_fee=123.5';
  _commerce_alipay_mobile_filter_special_characters($subject);
  return urlencode($subject);
}

// TODO:
function _commerce_alipay_mobile_filter_special_characters(&$subject) {
  $subject = strtr($subject, array(
    '/' => ' ',
    '&' => ' ',
  ));
}
